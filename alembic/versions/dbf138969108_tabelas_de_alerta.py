"""Tabelas de alerta

Revision ID: dbf138969108
Revises: 5cff4f355e40
Create Date: 2025-09-02 10:23:38.611913

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dbf138969108'
down_revision: Union[str, Sequence[str], None] = '5cff4f355e40'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert_rules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('condition', sa.Text(), nullable=False),
    sa.Column('severity', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id_user_created', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['id_user_created'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('severity', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('impact', sa.String(length=50), nullable=False),
    sa.Column('system', sa.String(length=255), nullable=False),
    sa.Column('assignee', sa.String(length=255), nullable=True),
    sa.Column('id_endpoint', sa.Integer(), nullable=True),
    sa.Column('id_user_created', sa.Integer(), nullable=False),
    sa.Column('id_user_assigned', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_endpoint'], ['endpoints.id'], ),
    sa.ForeignKeyConstraint(['id_user_assigned'], ['users.id'], ),
    sa.ForeignKeyConstraint(['id_user_created'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alert_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_alert', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_alert'], ['alerts.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('alert_logs')
    op.drop_table('alerts')
    op.drop_table('alert_rules')
    # ### end Alembic commands ###
