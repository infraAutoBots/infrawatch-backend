
üî¥ 192.168.8.146 | RTT: 0.0ms | SNMP: ‚ùå
HostStatus(_id=5,
           ip='192.168.8.146',
           is_alive=False,
           interval=30,
           version='',
           community='',
           port=0,
           user='',
           authKey='',
           privKey='',
           snmp_data=None,
           oids={'hrProcessorLoad': '',
                 'hrStorageSize': '',
                 'hrStorageUsed': '',
                 'memAvailReal': '',
                 'memTotalReal': '',
                 'sysDescr': '',
                 'sysName': '',
                 'sysUpTime': ''},
           last_updated=datetime.datetime(2025, 8, 30, 16, 29, 9, 310265),
           ping_rtt=0.0,
           consecutive_failures=0)

üü¢ 127.0.0.5 | RTT: 0.0ms | SNMP: ‚ùå
HostStatus(_id=7,
           ip='127.0.0.5',
           is_alive=True,
           interval=30,
           version='',
           community='',
           port=0,
           user='',
           authKey='',
           privKey='',
           snmp_data=None,
           oids={'hrProcessorLoad': '',
                 'hrStorageSize': '',
                 'hrStorageUsed': '',
                 'memAvailReal': '',
                 'memTotalReal': '',
                 'sysDescr': '',
                 'sysName': '',
                 'sysUpTime': ''},
           last_updated=datetime.datetime(2025, 8, 30, 16, 29, 8, 750119),
           ping_rtt=0.014,
           consecutive_failures=0)


           community='public',
           port=161,
           user='',
           authKey='',
           privKey='',
           snmp_data={'hrProcessorLoad': '',
                      'hrStorageSize': '',
                      'hrStorageUsed': '',
                      'memAvailReal': '',
                      'memTotalReal': '',
                      'sysDescr': 'Linux emailserver 2.6.9-42.EL #1 Sat Aug 12 '
                                  '09:17:58 CDT 2006 i686',
                      'sysName': 'emailserver',
                      'sysUpTime': '32436'},
           oids={'hrProcessorLoad': '1.3.6.1.2.1.25.3.3.1.2',
                 'hrStorageSize': '1.3.6.1.2.1.25.2.3.1.5',
                 'hrStorageUsed': '1.3.6.1.2.1.25.2.3.1.6',
                 'memAvailReal': '1.3.6.1.4.1.2021.4.6.0',
                 'memTotalReal': '1.3.6.1.4.1.2021.4.5.0',
                 'sysDescr': '1.3.6.1.2.1.1.1.0',
                 'sysName': '1.3.6.1.2.1.1.5.0',
                 'sysUpTime': '1.3.6.1.2.1.1.3.0'},
           last_updated=datetime.datetime(2025, 8, 30, 16, 29, 8, 778254),
           ping_rtt=0.075,
           consecutive_failures=0)




[
    {
    'data': EndPointsDataSchemas(
                id_end_point=1,
                status=True,
                sysDescr='Linux emailserver 2.6.9-42.EL #1 Sat Aug 12 09:17:58 CDT 2006 i686',
                sysName='emailserver',
                sysUpTime='125182',
                hrProcessorLoad='',
                memTotalReal='',
                memAvailReal='',
                hrStorageSize='',
                hrStorageUsed='',
                last_updated=datetime.datetime(2025, 8, 30, 17, 31, 27, 456805)

                id_end_point=2,
                status=True,
                sysDescr='Hardware x86 Family 6 Model 94 Stepping 3 AT/AT COMPATIBLE - Software: Windows Version 6.1 (Build 7601 Multiprocessor Free)',
                sysName='WIN-2K1RJV15BNU',
                sysUpTime='125182',
                hrProcessorLoad='',
                memTotalReal='',
                memAvailReal='',
                hrStorageSize='',
                hrStorageUsed='',
                last_updated=datetime.datetime(2025, 8, 30, 17, 31, 27, 456821)
                
                id_end_point=3,
                status=True,
                sysDescr='Darwin
                MacBook-Pro-2.local 19.5.0 Darwin Kernel Version 19.5.0: Tue May 26 20:41:44 PDT 2020; root:xnu-6153.121.2~2/RELEASE_X86_64 x86_64', sysName='MacBook-Pro-2.local',
                sysUpTime='125182',
                hrProcessorLoad='',
                memTotalReal='',
                memAvailReal='',
                hrStorageSize='',
                hrStorageUsed='',
                last_updated=datetime.dat
                last_updated=datetime.datetime(2025, 8, 30, 17, 31, 28, 206499)
                ), 'endpoint': '192.168.8.146'
    },
    {
     'data': EndPointsDataSchemas(
                id_end_point=6,
                status=True,
                sysDescr='Hardware
                Intel64 Family 6 Model 142 Stepping 9 AT/AT COMPATIBLE - Software: Windows Version 6.3 (Build 18363 Multiprocessor Free)',
                sysName='DESKTOP-O54K52B',
                sysUpTime='125182',
                hrProcessorLoad='',
                memTotalReal='',
                memAvailReal='',
                hrStorageSize='',
                hrStorageUsed='', 
                last_updated=datetime.datetime(2025, 8, 30, 17, 31, 27, 458122)
                ), 'endpoint': '127.0.0.4'
    },
    {
     'data': EndPointsDataSchemas(
                id_end_point=7,
                status=True,
                sysDescr=None,
                sysName=None,
                sysUpTime=None,
                hrProcessorLoad=None,
                memTotalReal=None,
                memAvailReal=None,
                hrStorageSize=None,
                hrStorageUsed=None,
                last_updated=datetime.datetime(2025, 8, 30, 17, 31, 27, 416561)
                ), 'endpoint': '127.0.0.5'
    }
]



















        # Recupera√ß√£o de PING (host volta a ficar online)   session_factory
        if (ping_failures >= self.max_consecutive_ping_failures and result.is_alive 
            and getattr(self.hosts_status[result.ip], 'informed', False)):
            self.notification_smtp_email.send_alert_email(
            to_emails=["ndondadaniel2020@gmail.com"],
            subject=f"Host {result.ip} est√° ONLINE",
            endpoint_name=result.name,
            endpoint_ip=result.ip,
            status="UP",
            timestamp=datetime.now()
            )
            logger.info(f"‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ Host {result.ip} foi restaurado (PING).")
            # add na db
            self.hosts_status[result.ip].informed = False
            self.hosts_status[result.ip].consecutive_ping_failures = 0

        # Host est√° online, mas n√£o consegue pegar dados SNMP (e SNMP est√° configurado)
        if (
            result.is_alive
            and check_ip_for_snmp(self.hosts_status[result.ip])
            and (not result.snmp_data or not any(result.snmp_data.values()))
            and not getattr(self.hosts_status[result.ip], 'snmp_informed', False)
        ):
            self.notification_smtp_email.send_alert_email(
            to_emails=["ndondadaniel2020@gmail.com"],
            subject=f"Host {result.ip} ONLINE mas SNMP FALHOU",
            endpoint_name=result.name,
            endpoint_ip=result.ip,
            status="SNMP DOWN",
            timestamp=datetime.now()
            )
            logger.warning(f"‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è Host {result.ip} est√° ONLINE mas SNMP n√£o respondeu.")
            self.hosts_status[result.ip].snmp_informed = True

        # Se SNMP voltar a responder, limpa flag de alerta SNMP
        if (
            result.is_alive
            and check_ip_for_snmp(self.hosts_status[result.ip])
            and result.snmp_data and any(result.snmp_data.values())
            and getattr(self.hosts_status[result.ip], 'snmp_informed', False)
        ):
            logger.info(f"‚úÖ‚úÖ‚úÖ Host {result.ip} SNMP voltou a responder.")
            self.hosts_status[result.ip].snmp_informed = False




























{
    "title": "string",
    "description": "string",
    "severity": "critical",
    "category": "infrastructure",
    "system": "string",
    "impact": "medium",
    "assignee": "string",
    "id_endpoint": 0
}








{
    <!-- CPU -->
    <Instance oid=".1.3.6.1.2.1.25.3.3.1.2.1" valueType="Integer">
    <Value><![CDATA[23]]></Value>
    </Instance>
    <Instance oid=".1.3.6.1.2.1.25.3.3.1.2.2" valueType="Integer">
    <Value><![CDATA[31]]></Value>
    </Instance>
    <!-- Mem√≥ria -->
    <Instance oid=".1.3.6.1.4.1.2021.4.5.0" valueType="Integer">
    <Value><![CDATA[8192000]]></Value>
    </Instance>
    <Instance oid=".1.3.6.1.4.1.2021.4.6.0" valueType="Integer">
    <Value><![CDATA[3072000]]></Value>
    </Instance>
    <!-- Interface de rede (exemplo) -->
    <Instance oid=".1.3.6.1.2.1.2.2.1.8.1" valueType="Integer">
    <Value><![CDATA[1]]></Value> <!-- 1 = up -->
    </Instance>
    <Instance oid=".1.3.6.1.2.1.2.2.1.10.1" valueType="Counter32">
    <Value><![CDATA[12345678]]></Value> <!-- Bytes recebidos -->
    </Instance>
    <Instance oid=".1.3.6.1.2.1.2.2.1.16.1" valueType="Counter32">
    <Value><![CDATA[87654321]]></Value> <!-- Bytes enviados -->
    </Instance>
}


{
    hrProcessorLoad

    hrProcessorLoad (1.3.6.1.2.1.25.3.3.1.2) ‚Äì Carga da CPU por n√∫cleo

    snmpwalk -v2c -c public <IP_DO_SERVIDOR> 1.3.6.1.2.1.25.3.3.1.2

    HOST-RESOURCES-MIB::hrProcessorLoad.1 = INTEGER: 12
    HOST-RESOURCES-MIB::hrProcessorLoad.2 = INTEGER: 18

    table_patterns = [
        "1.3.6.1.2.1.25.2.3.1",  # hrStorageTable
        "1.3.6.1.2.1.25.3.3.1",  # hrProcessorTable
        "1.3.6.1.2.1.2.2.1",     # ifTable
        "1.3.6.1.2.1.4.20.1",    # ipAddrTable
    ]

    {
    "id_end_point": 1,
    "status": true,
    "sysDescr": "Linux emailserver 2.6.9-42.EL #1 Sat Aug 12 09:17:58 CDT 2006 i686",
    "sysName": "emailserver",
    "sysUpTime": "8879",
    "hrProcessorLoad": "", lista de carga por cpu (1.3.6.1.2.1.25.3.3.1.2)
    "memTotalReal": "8192000", Total de mem√≥ria f√≠sica (1.3.6.1.4.1.2021.4.5.0)
    "memAvailReal": "3072000", Mem√≥ria f√≠sica livre (1.3.6.1.4.1.2021.4.6.0)
    "hrStorageSize": "", lista de Armazenamento total (1.3.6.1.2.1.25.2.3.1.5)
    "hrStorageUsed": "", lista de armazenamento usado (1.3.6.1.2.1.25.2.3.1.6)
    "last_updated": "2025-09-04T11:02:47.637753"
    }
}


{
    ubuntu~/Transfer√™ncias/ireasoning/simulator/bin
    $ snmpget -v2c -c public 127.0.0.1 1.3.6.1.2.1.25.3.3.1.2.1 1.3.6.1.2.1.25.3.3.1.2.2 1.3.6.1.4.1.2021.4.5.0 1.3.6.1.4.1.2021.4.6.0 1.3.6.1.2.1.25.2.3.1.5.1 1.3.6.1.2.1.25.2.3.1.6.1 1.3.6.1.2.1.2.2.1.8.1 1.3.6.1.2.1.2.2.1.10.1 1.3.6.1.2.1.2.2.1.16.1
    iso.3.6.1.2.1.25.3.3.1.2.1 = INTEGER: 23
    iso.3.6.1.2.1.25.3.3.1.2.2 = INTEGER: 31
    iso.3.6.1.4.1.2021.4.5.0 = INTEGER: 8192000
    iso.3.6.1.4.1.2021.4.6.0 = INTEGER: 3072000
    iso.3.6.1.2.1.25.2.3.1.5.1 = INTEGER: 483244
    iso.3.6.1.2.1.25.2.3.1.6.1 = INTEGER: 467084
    iso.3.6.1.2.1.2.2.1.8.1 = INTEGER: 1
    iso.3.6.1.2.1.2.2.1.10.1 = Counter32: 2713706375
    iso.3.6.1.2.1.2.2.1.16.1 = Counter32: 2713706375

    ubuntu~/Transfer√™ncias/ireasoning/simulator/bin
    $ snmpwalk -v2c -c public 127.0.0.1 1.3.6.1.4.1.2021.4.6.0
    iso.3.6.1.4.1.2021.4.6.0 = No more variables left in this MIB View (It is past the end of the MIB tree)

    ubuntu~/Transfer√™ncias/ireasoning/simulator/bin
    $ snmpwalk -v2c -c public 127.0.0.1       1.3.6.1.4.1.2021.4.6.0
}

{
    async def _get_values_from_snmp_tables(self, engine, auth_data, ip: str, port: int, base_oid: str):
        """Obt√©m todos os valores de uma tabela SNMP usando next_cmd (SNMP walk)"""
        
        values = []
        try:
            # Criar o transport target primeiro
            transport_target = await UdpTransportTarget.create((ip, port), timeout=2.0, retries=1)
            # Usar next_cmd para fazer SNMP walk (equivalente ao snmpwalk)
            from pysnmp.hlapi.v3arch.asyncio import next_cmd
            # Come√ßar do OID base
            current_oid = ObjectIdentity(base_oid)
            while True:
                try:
                    error_indication, error_status, error_index, var_binds = await asyncio.wait_for(
                        next_cmd(engine, auth_data, transport_target, ContextData(),
                                 ObjectType(current_oid), lexicographicMode=False),
                        timeout=3.0
                    )
                    
                    if error_indication:
                        if self.logger:
                            logger.debug(f"SNMP walk error indication: {error_indication}")
                        break
                    elif error_status:
                        if self.logger:
                            logger.debug(f"SNMP walk error status: {error_status}")
                        break
                    else:
                        # Verificar se ainda estamos na mesma tabela
                        oid_str = str(var_binds[0][0])
                        value = str(var_binds[0][1])
                        
                        if not oid_str.startswith(base_oid):
                            break  # Sa√≠mos da tabela
                        values.append({oid_str[len(base_oid):].lstrip('.'): value
                        })

                        # Pr√≥ximo OID para continuar o walk
                        current_oid = var_binds[0][0]
                        
                        # Limite de seguran√ßa para evitar loops infinitos
                        if len(values) >= 100:
                            if self.logger:
                                logger.debug(f"Limite de 100 entradas atingido para tabela {base_oid}")
                            break
                            
                except asyncio.TimeoutError:
                    if self.logger:
                        logger.debug(f"Timeout durante walk da tabela {base_oid}")
                    break
                except Exception as e:
                    if self.logger:
                        logger.debug(f"Erro durante walk da tabela {base_oid}: {e}")
                    break
            print(values)
            return str(values) if values else None
}

{
blic",
  "port": 161,
  "user": "",
  "authKey": "",
  "privKey": "",
  "sysDescr": "1.3.6.1.2.1.1.1.0",
  "sysName": "1.3.6.1.2.1.1.5.0",
  "sysUpTime": "1.3.6.1.2.1.1.3.0",
  "hrProcessorLoad": "1.3.6.1.2.1.25.3.3.1.2", nao tem
  "memTotalReal": "1.3.6.1.4.1.2021.4.5.0", nao tem 
  "memAvailReal": "1.3.6.1.4.1.2021.4.6.0", Nao tem
  "hrStorageSize": "1.3.6.1.2.1.25.2.3.1.5",
  "hrStorageUsed": "1.3.6.1.2.1.25.2.3.1.6",
  "ifOperStatus": "1.3.6.1.2.1.2.2.1.8.1",
  "ifInOctets": "1.3.6.1.2.1.2.2.1.10.1",
  "ifOutOctets": "1.3.6.1.2.1.2.2.1.16.1",
}


2025-09-07 16:16:28,144 [INFO] üöÄ Iniciando monitoramento otimizado com auto-reconex√£o...
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.1 Value: 23
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.1 Value: 23
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.2 Value: 31
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.2 Value: 31
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.1 Value: 23
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.1 Value: 23
Walk OID: 1.3.6.1.4.1.2021.4.5.0 Value: 8192000
Walk OID: 1.3.6.1.4.1.2021.4.5.0 Value: 8192000
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.2 Value: 31
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.2 Value: 31
Walk OID: 1.3.6.1.2.1.25.3.4.1.1.1025 Value: 1
Walk OID: 1.3.6.1.4.1.2021.4.5.0 Value: 8192000
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.1 Value: 23
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.1 Value: 23
Walk OID: 1.3.6.1.2.1.25.2.3.1.5.1 Value: 483244
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.1 Value: 23
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.1 Value: 23
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.1 Value: 23
Walk OID: 1.3.6.1.2.1.25.2.3.1.5.3 Value: 1466276
Walk OID: 1.3.6.1.2.1.25.3.3.1.2.1 Value: 23
Walk OID: 1.3.6.1.2.1.25.2.3.1.5.6 Value: 483244
Walk OID: 1.3.6.1.2.1.25.2.3.1.5.7 Value: 114584
Walk OID: 1.3.6.1.2.1.25.2.3.1.5.10 Value: 983032
Walk OID: 1.3.6.1.2.1.25.2.3.1.5.31 Value: 9329326
Walk OID: 1.3.6.1.2.1.25.2.3.1.5.32 Value: 101086
Walk OID: 1.3.6.1.2.1.25.2.3.1.6.1 Value: 467084
Walk OID: 1.3.6.1.2.1.25.2.3.1.6.1 Value: 467084
Walk OID: 1.3.6.1.2.1.25.2.3.1.6.3 Value: 473964
Walk OID: 1.3.6.1.2.1.25.2.3.1.6.6 Value: 11440
Walk OID: 1.3.6.1.2.1.25.2.3.1.6.7 Value: 114584
Walk OID: 1.3.6.1.2.1.25.2.3.1.6.10 Value: 6880
Walk OID: 1.3.6.1.2.1.25.2.3.1.6.31 Value: 1828816
Walk OID: 1.3.6.1.2.1.25.2.3.1.6.32 Value: 9270
Walk OID: 1.3.6.1.2.1.25.3.2.1.1.768 Value: 768










{
  "monitors": [
    {
      "endpoint": "127.0.0.1",
      "snmp": true,
      "data": {
        "id_end_point": 1,
        "status": true,
        "sysDescr": "Linux emailserver 2.6.9-42.EL #1 Sat Aug 12 09:17:58 CDT 2006 i686",
        "sysName": "emailserver",
        "sysUpTime": "87983",
        "hrProcessorLoad": [
          {
            "index": "1",
            "value": "23"
          },
          {
            "index": "2",
            "value": "31"
          }
        ],
        "memTotalReal": "8192000",
        "memAvailReal": "3072000",
        "hrStorageSize": [
          {
            "index": "1",
            "value": "483244"
          },
          {
            "index": "3",
            "value": "1466276"
          },
          {
            "index": "6",
            "value": "483244"
          },
          {
            "index": "7",
            "value": "114584"
          },
          {
            "index": "10",
            "value": "983032"
          },
          {
            "index": "31",
            "value": "9329326"
          },
          {
            "index": "32",
            "value": "101086"
          }
        ],
        "hrStorageUsed": [
          {
            "index": "1",
            "value": "467084"
          },
          {
            "index": "3",
            "value": "473964"
          },
          {
            "index": "6",
            "value": "11440"
          },
          {
            "index": "7",
            "value": "114584"
          },
          {
            "index": "10",
            "value": "6880"
          },
          {
            "index": "31",
            "value": "1828816"
          },
          {
            "index": "32",
            "value": "9270"
          }
        ],
        "ifOperStatus": [
          {
            "index": "1",
            "value": "1"
          },
          {
            "index": "2",
            "value": "1"
          },
          {
            "index": "3",
            "value": "2"
          }
        ],
        "ifInOctets": [
          {
            "index": "1",
            "value": "2713706375"
          },
          {
            "index": "2",
            "value": "10803936"
          },
          {
            "index": "3",
            "value": "0"
          }
        ],
        "ifOutOctets": [
          {
            "index": "1",
            "value": "2713706375"
          },
          {
            "index": "2",
            "value": "4189015"
          },
          {
            "index": "3",
            "value": "0"
          }
        ],
        "last_updated": "2025-09-07T17:28:00.711474"
      }
    },





guardar tempo de resposta
melhorar as msg de error relacionados ao armazenamento, rede, cpu
"hrStorageDescr" : "1.3.6.1.2.1.25.2.3.1.3"


nalizeo meu nomitoramento nao esta a consegui resolver o falso negativo do dgg.gg como me ajudarias a resolve isso

